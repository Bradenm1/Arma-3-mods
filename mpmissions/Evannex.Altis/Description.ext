title = "Evannex";
author = "Bradenm1";
onLoadName = "Evannex";
onLoadMission = "An AI vs AI gamemode";
loadScreen = "textures\mission_thumbnail.paa";

corpseManagerMode = 1;
corpseLimit = 3;
corpseRemovalMinTime = 10;
corpseRemovalMaxTime = 20; 

wreckManagerMode = 1;
wreckLimit = 4;
wreckRemovalMinTime = 60;
briefing = -1;

reviveMode = 1;
aiKills = 1;
enableItemsDropping = 0;

disabledAI = 1;
respawn = "base";
respawnButton = 1;
respawnDelay = 10;

class Header {
	gameType =  Sandbox;		// Game type
	minPlayers =  1;			// minimum number of players the mission supports
	maxPlayers = 32;			// maximum number of players the mission supports
};

// Server params
class Params {
	class NumberFriendlyGroups {
		title = "Min Friendly Ground Groups Amount"; // Param name visible in the list
		values[] = {0, 1, 5, 10, 15, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 10; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	class NumberEnemyGroups {
		title = "Min Enemy Groups Amount"; // Param name visible in the list
		values[] = {0, 1, 5, 10, 15, 17, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 15; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	class  NumberEnemySpecialGroups {
		title = "Number Of Special Enemy Groups"; // Param name visible in the list
		values[] = {0, 1, 5, 6, 10, 15, 17, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 6; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	}
	class  MinEnemyGroupsForCapture {
		title = "Min Enemy Groups For Capture"; // Param name visible in the list
		values[] = {0, 1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 4; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	}
	class  MinAIDistanceForDeleteion {
		title = "Min AI Distance For Deleteion"; // Param name visible in the list
		values[] = {100, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 5000, 10000, 99999999}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 1500; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	}
	class ZoneRadius {
		title = "Zone Radius";
		values[] = {1,5,10,15, 20, 30, 40, 50, 55, 60, 70, 80, 90, 100, 200, 400, 500, 700, 800, 1000};
		default = 40;
	};
	/*class Checks {
		title = "Number of checks (Finds zones, spawners..)";
		values[] = {10, 50, 100, 200, 300, 400, 500, 1000};
		// When 'texts' are missing, values will be displayed directly instead
		default = 1000;
	};*/
	class HQEnabled {
        title = "HQ Enabled";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class FriendlyAIEnabled {
        title = "Friendly AI Enabled";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class FriendlyMarkEnemy {
        title = "Friendly Units Mark Enemy Positions?";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class ZeusSeesAI {
		title = "Allow Zeus to see spawned AI";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
	}
	class Fatigue {
        title = "Player Fatigue";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 0;
    };
	class Stamina {
        title = "Player Stamina";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 0;
    };
	class ForceWalk {
        title = "Player Force Walk";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 0;
    };
	class CustomAim {
        title = "More Steady Aim";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class SideObjectives {
        title = "Enabled Side Objectives";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
};

class CfgFunctions 
{ 
    #include "SBGF\cfgfunctions.hpp" 
};